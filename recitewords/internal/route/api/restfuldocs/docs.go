// Package restfuldocs Code generated by swaggo/swag. DO NOT EDIT
package restfuldocs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/v1/classes": {
            "post": {
                "description": "GetAllClasses",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "GetClass",
                "parameters": [
                    {
                        "type": "string",
                        "description": "string",
                        "name": "title",
                        "in": "formData"
                    },
                    {
                        "type": "integer",
                        "description": "int",
                        "name": "parent_id",
                        "in": "formData"
                    },
                    {
                        "type": "boolean",
                        "description": "bool",
                        "name": "enable_to_memory",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "string",
                        "name": "token",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "We need ID!!",
                        "schema": {
                            "$ref": "#/definitions/errcode.Error"
                        }
                    },
                    "404": {
                        "description": "Can not find ID",
                        "schema": {
                            "$ref": "#/definitions/web.APIError"
                        }
                    }
                }
            }
        },
        "/api/v1/{some_msg}": {
            "get": {
                "description": "GetPage",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "GetClass",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Some Msg",
                        "name": "some_msg",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "We need ID!!",
                        "schema": {
                            "$ref": "#/definitions/web.APIError"
                        }
                    },
                    "404": {
                        "description": "Can not find ID",
                        "schema": {
                            "$ref": "#/definitions/web.APIError"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "errcode.Error": {
            "type": "object",
            "properties": {
                "code": {
                    "description": "错误码",
                    "type": "integer"
                },
                "details": {
                    "description": "详细信息",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "msg": {
                    "description": "错误消息",
                    "type": "string"
                }
            }
        },
        "web.APIError": {
            "type": "object",
            "properties": {
                "errorCode": {
                    "description": "错误码",
                    "type": "integer"
                },
                "errorMessage": {
                    "description": "错误消息",
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
